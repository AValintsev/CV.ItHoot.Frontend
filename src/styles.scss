// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material'as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CVBuilder-primary: mat.define-palette(mat.$indigo-palette);
$CVBuilder-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CVBuilder-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$CVBuilder-theme: mat.define-light-theme((color: (primary: $CVBuilder-primary,
      accent: $CVBuilder-accent,
      warn: $CVBuilder-warn,
    )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($CVBuilder-theme);

/* You can add global styles to this file, and also import other style files */
@import './app/shared/styles/normalize.scss';
@import url('https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900');

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  font-family: 'Inter', sans-serif;
  overflow-y: hidden;
  overflow-x: hidden;
}

html,
body {
  max-height: 100vh;
  font-size: 10px
}

// body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
.success-snackbar {
  background: green;
  color: white;
  font-size: 1em;
}

.danger-snackbar {
  background: red;
  color: white;
  font-size: 1em;
}

.btn-reset {
  border: transparent;
  outline: transparent;
  background-color: transparent;
}

a {
  text-decoration: none;
}

a:visited {
  color: inherit;
}

.side-bar li.active .mat-expansion-indicator::after {
  color: white;
}

.mat-select-panel {
  position: absolute;
  top: 3.6rem;
  left: .4rem;
  min-width: calc(100% + 22px) !important;
  border-radius: 0px !important;
  border-top-style: none;

  @media(max-width:970px) {
    left: -8.3rem;
  }

  @media(max-width:700px) {
    top: 2.6rem;
  }

  @media(max-width:600px) {
    top: 2.2rem;
  }
}

.mat-form-field-appearance-outline .mat-form-field-outline-start {
  border-radius: 0px !important;
  border-right-style: none !important;
}

.mat-form-field-appearance-outline .mat-form-field-outline-end {
  border-radius: 0px !important;
  border-left-style: none !important;
}

.mat-select-panel ng-animating {
  visibility: hidden;
}

// style scrollbar

::-webkit-scrollbar {
  width: 12px;
  /* ширина всей полосы прокрутки */
}

::-webkit-scrollbar-track {
  background: #E5E5E5;
  /* цвет зоны отслеживания */
}

::-webkit-scrollbar-thumb {
  background-color: rgb(138, 146, 166);
  /* цвет бегунка */
  border-radius: 20px;
  /* округлось бегунка */
  // border: 3px solid orange;
  /* отступ вокруг бегунка */
}

.delete-modal {
  height: 150px;
  width: 300px;
}

.admin-btn {
  padding-left: 1rem;
  padding-right: 1rem;
}

// resets the styles in the scroll-bar material in the component,but you need to add panelClass: 'remove-style-scroll'

.remove-style-scroll {
  .mat-dialog-actions {
    margin-bottom: 0 !important;
  }


}

.change-material-style {
  .mat-dialog-content {
    max-height: 85vh !important;
  }
}